/*
 * This file is automatically generated by UnitTestBot. For further information seehttps://unittestbot.org
 */

#include "array-sort_dot_c_test.h"

#include "gtest/gtest.h"
namespace UTBot {
static const float utbot_abs_error = 1e-6;
// Some tests for function 'sort_array' were skipped, as execution of function is out of timeout.

// Some tests for function 'sort_array_with_comparator' were skipped, as execution of function is out of timeout.


typedef int (*sort_array_with_comparator_cmp_arg)(int, int);
int sort_array_with_comparator_cmp_symbolic[10];
int _sort_array_with_comparator_cmp_stub(int param1, int param2) {
    static int firstTimeCall = 1;
    static int cntCall = 0;
    #ifdef KLEE_MODE
        if (firstTimeCall == 1) {
            firstTimeCall = 0;
            klee_make_symbolic(&sort_array_with_comparator_cmp_symbolic, sizeof(sort_array_with_comparator_cmp_symbolic), "sort_array_with_comparator_cmp_symbolic");
            for (int it_298_0 = 0; it_298_0 < 10; it_298_0 ++) {
                klee_prefer_cex(sort_array_with_comparator_cmp_symbolic, sort_array_with_comparator_cmp_symbolic[it_298_0] >= -10  & sort_array_with_comparator_cmp_symbolic[it_298_0] <= 10);
            }
        }
    #endif
    if (cntCall == 10) {
        cntCall--;
    }
    return sort_array_with_comparator_cmp_symbolic[cntCall++];
}



#pragma region regression
TEST(regression, sort_array_test_1)
{
    int arr[10] = {0, -1, -10, -2, 0, 0, 0, 0, 0, 0};
    int actual = sort_array(arr, 4);
    EXPECT_EQ(1, actual);
    int expected_arr[10] = {-10, -2, -1, 0, 0, 0, 0, 0, 0, 0};
    for (int it_297_0 = 0; it_297_0 < 10; it_297_0 ++) {
        EXPECT_EQ(expected_arr[it_297_0], arr[it_297_0]);
    }
}

TEST(regression, sort_array_with_comparator_test_1)
{
    int arr[10] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    int actual = sort_array_with_comparator(arr, 0, _sort_array_with_comparator_cmp_stub);
    EXPECT_EQ(0, actual);
    int expected_arr[10] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    for (int it_299_0 = 0; it_299_0 < 10; it_299_0 ++) {
        EXPECT_EQ(expected_arr[it_299_0], arr[it_299_0]);
    }
}

#pragma endregion
#pragma region error
TEST(error, sort_array_test_2)
{
    int arr[10] = {-1, -2, -2, -2, -2, -2, -2, -2, -2, -2};
    sort_array(arr, 1073741825);
}

TEST(error, sort_array_with_comparator_test_2)
{
    int arr[10] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    sort_array_with_comparator(arr, 100664340, _sort_array_with_comparator_cmp_stub);
}

#pragma endregion
}
