/*
 * This file is automatically generated by UnitTestBot. For further information seehttps://unittestbot.org
 */

#include "main_dot_c_test.h"

#include "gtest/gtest.h"
namespace UTBot {
static const float utbot_abs_error = 1e-6;


#pragma region regression
TEST(regression, exit_code_test_1)
{
    int actual = exit_code(1);
    EXPECT_EQ(0, actual);
}

TEST(regression, exit_code_test_2)
{
    int actual = exit_code(0);
    EXPECT_EQ(1, actual);
}

TEST(regression, main2_test_1)
{
    char _argv[2][2] = {{'c', 'c'}, {'b', 'a'}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_335_0 = 0; it_335_0 < 2; it_335_0 ++) {
        argv[it_335_0] = _argv[it_335_0];
    }
    argv[2] = NULL;
    int actual = main2(1, argv);
    EXPECT_EQ(0, actual);
    char expected_argv[2][2] = {{'c', 'c'}, {'b', 'a'}};
    for (int it_336_0 = 0; it_336_0 < 2; it_336_0 ++) {
        for (int it_336_1 = 0; it_336_1 < 2; it_336_1 ++) {
            EXPECT_EQ(expected_argv[it_336_0][it_336_1], _argv[it_336_0][it_336_1]);
        }
    }
}

TEST(regression, main2_test_2)
{
    char _argv[2][2] = {{'c', 'c'}, {'b', 'a'}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_337_0 = 0; it_337_0 < 2; it_337_0 ++) {
        argv[it_337_0] = _argv[it_337_0];
    }
    argv[2] = NULL;
    int actual = main2(0, argv);
    EXPECT_EQ(1, actual);
    char expected_argv[2][2] = {{'c', 'c'}, {'b', 'a'}};
    for (int it_338_0 = 0; it_338_0 < 2; it_338_0 ++) {
        for (int it_338_1 = 0; it_338_1 < 2; it_338_1 ++) {
            EXPECT_EQ(expected_argv[it_338_0][it_338_1], _argv[it_338_0][it_338_1]);
        }
    }
}

TEST(regression, main_test_1)
{
    char _argv[2][2] = {{'c', 'c'}, {'{', 'a'}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_339_0 = 0; it_339_0 < 2; it_339_0 ++) {
        argv[it_339_0] = _argv[it_339_0];
    }
    argv[2] = NULL;
    int actual = main(2, argv);
    EXPECT_EQ(2, actual);
    char expected_argv[2][2] = {{'c', 'c'}, {'{', 'a'}};
    for (int it_340_0 = 0; it_340_0 < 2; it_340_0 ++) {
        for (int it_340_1 = 0; it_340_1 < 2; it_340_1 ++) {
            EXPECT_EQ(expected_argv[it_340_0][it_340_1], _argv[it_340_0][it_340_1]);
        }
    }
}

TEST(regression, main_test_2)
{
    char _argv[2][2] = {{'c', 'c'}, {'1', '@'}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_341_0 = 0; it_341_0 < 2; it_341_0 ++) {
        argv[it_341_0] = _argv[it_341_0];
    }
    argv[2] = NULL;
    int actual = main(2, argv);
    EXPECT_EQ(3, actual);
    char expected_argv[2][2] = {{'c', 'c'}, {'1', '@'}};
    for (int it_342_0 = 0; it_342_0 < 2; it_342_0 ++) {
        for (int it_342_1 = 0; it_342_1 < 2; it_342_1 ++) {
            EXPECT_EQ(expected_argv[it_342_0][it_342_1], _argv[it_342_0][it_342_1]);
        }
    }
}

TEST(regression, main_test_3)
{
    char _argv[2][2] = {{'c', 'c'}, {'9', '@'}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_343_0 = 0; it_343_0 < 2; it_343_0 ++) {
        argv[it_343_0] = _argv[it_343_0];
    }
    argv[2] = NULL;
    int actual = main(2, argv);
    EXPECT_EQ(9, actual);
    char expected_argv[2][2] = {{'c', 'c'}, {'9', '@'}};
    for (int it_344_0 = 0; it_344_0 < 2; it_344_0 ++) {
        for (int it_344_1 = 0; it_344_1 < 2; it_344_1 ++) {
            EXPECT_EQ(expected_argv[it_344_0][it_344_1], _argv[it_344_0][it_344_1]);
        }
    }
}

TEST(regression, main_test_4)
{
    char _argv[2][2] = {{'c', 'c'}, {'a', 'a'}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_345_0 = 0; it_345_0 < 2; it_345_0 ++) {
        argv[it_345_0] = _argv[it_345_0];
    }
    argv[2] = NULL;
    int actual = main(2, argv);
    EXPECT_EQ(2, actual);
    char expected_argv[2][2] = {{'c', 'c'}, {'a', 'a'}};
    for (int it_346_0 = 0; it_346_0 < 2; it_346_0 ++) {
        for (int it_346_1 = 0; it_346_1 < 2; it_346_1 ++) {
            EXPECT_EQ(expected_argv[it_346_0][it_346_1], _argv[it_346_0][it_346_1]);
        }
    }
}

TEST(regression, main_test_5)
{
    char _argv[2][2] = {{'c', 'c'}, {'1', '\0'}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_347_0 = 0; it_347_0 < 2; it_347_0 ++) {
        argv[it_347_0] = _argv[it_347_0];
    }
    argv[2] = NULL;
    int actual = main(2, argv);
    EXPECT_EQ(3, actual);
    char expected_argv[2][2] = {{'c', 'c'}, {'1', '\0'}};
    for (int it_348_0 = 0; it_348_0 < 2; it_348_0 ++) {
        for (int it_348_1 = 0; it_348_1 < 2; it_348_1 ++) {
            EXPECT_EQ(expected_argv[it_348_0][it_348_1], _argv[it_348_0][it_348_1]);
        }
    }
}

TEST(regression, main_test_6)
{
    char _argv[2][2] = {{'c', 'c'}, {'\0', 'a'}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_349_0 = 0; it_349_0 < 2; it_349_0 ++) {
        argv[it_349_0] = _argv[it_349_0];
    }
    argv[2] = NULL;
    int actual = main(2, argv);
    EXPECT_EQ(2, actual);
    char expected_argv[2][2] = {{'c', 'c'}, {'\0', 'a'}};
    for (int it_350_0 = 0; it_350_0 < 2; it_350_0 ++) {
        for (int it_350_1 = 0; it_350_1 < 2; it_350_1 ++) {
            EXPECT_EQ(expected_argv[it_350_0][it_350_1], _argv[it_350_0][it_350_1]);
        }
    }
}

TEST(regression, main_test_7)
{
    char _argv[2][2] = {{'c', 'c'}, {'X', 'a'}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_351_0 = 0; it_351_0 < 2; it_351_0 ++) {
        argv[it_351_0] = _argv[it_351_0];
    }
    argv[2] = NULL;
    int actual = main(2, argv);
    EXPECT_EQ(2, actual);
    char expected_argv[2][2] = {{'c', 'c'}, {'X', 'a'}};
    for (int it_352_0 = 0; it_352_0 < 2; it_352_0 ++) {
        for (int it_352_1 = 0; it_352_1 < 2; it_352_1 ++) {
            EXPECT_EQ(expected_argv[it_352_0][it_352_1], _argv[it_352_0][it_352_1]);
        }
    }
}

TEST(regression, main_test_8)
{
    char _argv[2][2] = {{'c', 'c'}, {'b', 'a'}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_353_0 = 0; it_353_0 < 2; it_353_0 ++) {
        argv[it_353_0] = _argv[it_353_0];
    }
    argv[2] = NULL;
    int actual = main(0, argv);
    EXPECT_EQ(1, actual);
    char expected_argv[2][2] = {{'c', 'c'}, {'b', 'a'}};
    for (int it_354_0 = 0; it_354_0 < 2; it_354_0 ++) {
        for (int it_354_1 = 0; it_354_1 < 2; it_354_1 ++) {
            EXPECT_EQ(expected_argv[it_354_0][it_354_1], _argv[it_354_0][it_354_1]);
        }
    }
}

#pragma endregion
#pragma region error
TEST(error, main_test_9)
{
    char _argv[2][2] = {{'c', 'b'}, {'4', '0'}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_355_0 = 0; it_355_0 < 2; it_355_0 ++) {
        argv[it_355_0] = _argv[it_355_0];
    }
    argv[2] = NULL;
    main(2, argv);
}

TEST(error, main_test_10)
{
    char _argv[2][2] = {{'c', 'b'}, {' ', '-'}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_356_0 = 0; it_356_0 < 2; it_356_0 ++) {
        argv[it_356_0] = _argv[it_356_0];
    }
    argv[2] = NULL;
    main(2, argv);
}

TEST(error, main_test_11)
{
    char _argv[2][2] = {{'c', 'b'}, {' ', '+'}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_357_0 = 0; it_357_0 < 2; it_357_0 ++) {
        argv[it_357_0] = _argv[it_357_0];
    }
    argv[2] = NULL;
    main(2, argv);
}

TEST(error, main_test_12)
{
    char _argv[2][2] = {{'c', 'b'}, {' ', ' '}};
    char ** argv = (char **) calloc(3, sizeof(char *));
    for (int it_358_0 = 0; it_358_0 < 2; it_358_0 ++) {
        argv[it_358_0] = _argv[it_358_0];
    }
    argv[2] = NULL;
    main(2, argv);
}

#pragma endregion
}
