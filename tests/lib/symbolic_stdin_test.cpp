/*
 * This file is automatically generated by UnitTestBot. For further information see https://github.com/UnitTestBot/UTBotCpp
 * Copyright (c) Huawei Technologies Co., Ltd. 2012-2021. All rights reserved.
 */

#include "symbolic_stdin_test.h"

#include "gtest/gtest.h"
namespace UTBot {
static const float utbot_abs_error = 1e-6;


#pragma region regression

TEST(regression, check_password_test_1)
{
    int actual = check_password(-1);
    EXPECT_EQ(0, actual);
}

TEST(regression, check_password_test_2)
{
    char stdin_buf[] = "hel\0""e";
    int utbot_redirect_stdin_status = 0;
    utbot_redirect_stdin(stdin_buf, utbot_redirect_stdin_status);
    if (utbot_redirect_stdin_status != 0) {
        FAIL() << "Unable to redirect stdin.";
    }
    int actual = check_password(0);
    EXPECT_EQ(0, actual);
}

TEST(regression, check_password_test_3)
{
    char stdin_buf[] = "hell\0""";
    int utbot_redirect_stdin_status = 0;
    utbot_redirect_stdin(stdin_buf, utbot_redirect_stdin_status);
    if (utbot_redirect_stdin_status != 0) {
        FAIL() << "Unable to redirect stdin.";
    }
    int actual = check_password(0);
    EXPECT_EQ(0, actual);
}

TEST(regression, check_password_test_4)
{
    int actual = check_password(1);
    EXPECT_EQ(0, actual);
}

TEST(regression, check_password_test_5)
{
    char stdin_buf[] = "he\0""hh";
    int utbot_redirect_stdin_status = 0;
    utbot_redirect_stdin(stdin_buf, utbot_redirect_stdin_status);
    if (utbot_redirect_stdin_status != 0) {
        FAIL() << "Unable to redirect stdin.";
    }
    int actual = check_password(0);
    EXPECT_EQ(0, actual);
}

TEST(regression, check_password_test_6)
{
    char stdin_buf[] = "h\0""\0""\0""\0""";
    int utbot_redirect_stdin_status = 0;
    utbot_redirect_stdin(stdin_buf, utbot_redirect_stdin_status);
    if (utbot_redirect_stdin_status != 0) {
        FAIL() << "Unable to redirect stdin.";
    }
    int actual = check_password(0);
    EXPECT_EQ(0, actual);
}

TEST(regression, check_password_test_7)
{
    int actual = check_password(3);
    EXPECT_EQ(0, actual);
}

TEST(regression, check_password_test_8)
{
    int actual = check_password(1024);
    EXPECT_EQ(0, actual);
}

TEST(regression, check_password_test_9)
{
    char stdin_buf[] = "hello";
    int utbot_redirect_stdin_status = 0;
    utbot_redirect_stdin(stdin_buf, utbot_redirect_stdin_status);
    if (utbot_redirect_stdin_status != 0) {
        FAIL() << "Unable to redirect stdin.";
    }
    int actual = check_password(0);
    EXPECT_EQ(1, actual);
}

#pragma endregion
}
